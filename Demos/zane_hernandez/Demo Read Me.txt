Zane Hernandez
DMGD S-17

The four videos submitted here are the three separate parts of my (Zane Hernandez) live demo for the combined road following and obstacle/collision avoidance model for the project, as well as one combined video of parts 1 and 3. All parts were recorded on my iPhone and were sent to my computer. However when the files arrived Parts 1 and 3 were in tact while Part 2 was corrupted (I found out by trying to add it to iMovie to combine the 3 individual parts into 1 video). I tried several online suggestions to repair the video (changing the file type, sending another copy from the iPhone, etc.) and none of them worked. Due to being short on time and needing to upload a demo to YouTube (which had been horrendously slow in the past for me with test videos on a separate new YT channel) I decided to put the 2 non corrupted parts together for the demo (if the combined demo video here is unaccessible there is a link to the YT video in the project's README file). 

Part 2 was a 7 second video showing my robot veering off track a bit and getting stuck forcing me  to turn the speed to 0 and readjust briefly (I accidentally stopped and restarted the recording during adjustment back onto the track and again while resetting the speed back up to the defined value of 40% to continue the demo). This does show some flaw in my road following model as does sections of part 3. It gets the general shape of my track, but has slight hiccups even when the fps is reduced to 5. On thorough inspection and attempts to alter previously my jetbot does not have a fan to adjust to try and use that mitigation method. When running the demo in its current form I noticed the stream from the camera feed had a degree of lag (even with the low fps of 5). I presume this may be due to one or multiple of the following:  

1. Having a good chunk of my robot's memory taken up between both tasks (road following and obstacle avoidance) being processed by the camera at the same time.

2. Storing the images that built the two models taking up memory that could be used for processing.

3. Streaming the camera feed to my browser while running the program.

4. The simple nature of my oval shaped track made the bot think it was at the other end rather than where it actually was.

It is partially successful though, and the collision/obstacle avoidance measure is on point as demonstrated in the demo video(s).